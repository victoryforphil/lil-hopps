(function() {var type_impls = {
"rapier3d":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><h4 class=\"code-header\">pub fn <a href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html#tymethod.new\" class=\"fn\">new</a>(_0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>, _1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>, _2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>, _3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></div></details>",0,"rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><h4 class=\"code-header\">pub fn <a href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html#tymethod.new\" class=\"fn\">new</a>(_0: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, _1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, _2: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>, _3: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></div></details>",0,"rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdPartialOrd-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-SimdPartialOrd-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html\" title=\"trait simba::simd::simd_partial_ord::SimdPartialOrd\">SimdPartialOrd</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_gt\" class=\"fn\">simd_gt</a>(\n    self,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Lanewise <em>greater than</em> <code>&gt;</code> comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_lt\" class=\"fn\">simd_lt</a>(\n    self,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Lanewise <em>less than</em> <code>&lt;</code> comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_ge\" class=\"fn\">simd_ge</a>(\n    self,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Lanewise <em>greater or equal</em> <code>&gt;=</code> comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_le\" class=\"fn\">simd_le</a>(\n    self,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Lanewise <em>less or equal</em> <code>&lt;=</code> comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_eq\" class=\"fn\">simd_eq</a>(\n    self,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Lanewise <em>equal</em> <code>==</code> comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_ne\" class=\"fn\">simd_ne</a>(\n    self,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Lanewise <em>not equal</em> <code>!=</code> comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_max\" class=\"fn\">simd_max</a>(self, other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Lanewise max value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_min\" class=\"fn\">simd_min</a>(self, other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Lanewise min value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_clamp\" class=\"fn\">simd_clamp</a>(\n    self,\n    min: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;,\n    max: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Clamps each lane of <code>self</code> between the corresponding lane of <code>min</code> and <code>max</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_horizontal_min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_horizontal_min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_horizontal_min\" class=\"fn\">simd_horizontal_min</a>(self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>The min value among all lanes of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_horizontal_max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_horizontal_max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_partial_ord/trait.SimdPartialOrd.html#tymethod.simd_horizontal_max\" class=\"fn\">simd_horizontal_max</a>(self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>The max value among all lanes of <code>self</code>.</div></details></div></details>","SimdPartialOrd","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bbool;+4%5D%3E-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-From%3C%5Bbool;+4%5D%3E-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vals: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[bool; 4]>","rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5Bf32;+4%5D%3E-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-From%3C%5Bf32;+4%5D%3E-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(vals: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[f32; 4]>","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Div-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-MulAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-SubAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CAutoSimd%3C%5Bf32;+4%5D%3E%3E-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-SubsetOf%3CAutoSimd%3C%5Bf32;+4%5D%3E%3E-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt; for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: &amp;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(element: &amp;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(_: &amp;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details></div></details>","SubsetOf<AutoSimd<[f32; 4]>>","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdRealField-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-SimdRealField-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.simd_atan2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_atan2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_atan2\" class=\"fn\">simd_atan2</a>(self, other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_copysign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_copysign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_copysign\" class=\"fn\">simd_copysign</a>(self, sign: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Copies the sign of <code>sign</code> to <code>self</code>. <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_copysign\">Read more</a></div></details><section id=\"method.simd_default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_default_epsilon\" class=\"fn\">simd_default_epsilon</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_pi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_pi\" class=\"fn\">simd_pi</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_two_pi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_two_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_two_pi\" class=\"fn\">simd_two_pi</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_pi_2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_pi_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_pi_2\" class=\"fn\">simd_frac_pi_2</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_pi_3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_pi_3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_pi_3\" class=\"fn\">simd_frac_pi_3</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_pi_4\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_pi_4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_pi_4\" class=\"fn\">simd_frac_pi_4</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_pi_6\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_pi_6\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_pi_6\" class=\"fn\">simd_frac_pi_6</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_pi_8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_pi_8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_pi_8\" class=\"fn\">simd_frac_pi_8</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_1_pi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_1_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_1_pi\" class=\"fn\">simd_frac_1_pi</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_2_pi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_2_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_2_pi\" class=\"fn\">simd_frac_2_pi</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_frac_2_sqrt_pi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_frac_2_sqrt_pi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_frac_2_sqrt_pi\" class=\"fn\">simd_frac_2_sqrt_pi</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_e\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_e\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_e\" class=\"fn\">simd_e</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_log2_e\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_log2_e\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_log2_e\" class=\"fn\">simd_log2_e</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_log10_e\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_log10_e\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_log10_e\" class=\"fn\">simd_log10_e</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_ln_2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_ln_2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_ln_2\" class=\"fn\">simd_ln_2</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_ln_10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_ln_10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_real/trait.SimdRealField.html#tymethod.simd_ln_10\" class=\"fn\">simd_ln_10</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></div></details>","SimdRealField","rapier3d::math::SimdReal"],["<section id=\"impl-StructuralPartialEq-for-AutoSimd%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#impl-StructuralPartialEq-for-AutoSimd%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;</h3></section>","StructuralPartialEq","rapier3d::math::SimdBool","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Sub-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-AutoSimd%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#impl-Debug-for-AutoSimd%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rapier3d::math::SimdBool","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-One-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#128-130\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details></div></details>","One","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-AddAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-BitXor-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-Display-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Display-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.2/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Neg-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","rapier3d::math::SimdReal"],["<section id=\"impl-Copy-for-AutoSimd%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#impl-Copy-for-AutoSimd%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","rapier3d::math::SimdBool","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Mul-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-BitOr-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Rem-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Zero-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdComplexField-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-SimdComplexField-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdRealField\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SimdRealField\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" class=\"associatedtype\">SimdRealField</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Type of the coefficients of a complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_horizontal_sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_horizontal_sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_horizontal_sum\" class=\"fn\">simd_horizontal_sum</a>(self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Computes the sum of all the lanes of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_horizontal_product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_horizontal_product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_horizontal_product\" class=\"fn\">simd_horizontal_product</a>(self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Computes the product of all the lanes of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_simd_real\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_simd_real\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.from_simd_real\" class=\"fn\">from_simd_real</a>(\n    re: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a>\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Builds a pure-real complex number from the given value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_real\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_real\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_real\" class=\"fn\">simd_real</a>(self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a></h4></section></summary><div class='docblock'>The real part of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_imaginary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_imaginary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_imaginary\" class=\"fn\">simd_imaginary</a>(\n    self\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a></h4></section></summary><div class='docblock'>The imaginary part of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_norm1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_norm1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_norm1\" class=\"fn\">simd_norm1</a>(self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a></h4></section></summary><div class='docblock'>The sum of the absolute value of this complex number’s real and imaginary part.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_modulus\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_modulus\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_modulus\" class=\"fn\">simd_modulus</a>(self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a></h4></section></summary><div class='docblock'>The modulus of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_modulus_squared\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_modulus_squared\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_modulus_squared\" class=\"fn\">simd_modulus_squared</a>(\n    self\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a></h4></section></summary><div class='docblock'>The squared modulus of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_argument\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_argument\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_argument\" class=\"fn\">simd_argument</a>(\n    self\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a></h4></section></summary><div class='docblock'>The argument of this complex number.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_to_exp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_to_exp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_to_exp\" class=\"fn\">simd_to_exp</a>(\n    self\n) -&gt; (&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a>, <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;)</h4></section></summary><div class='docblock'>The exponential form of this complex number: (modulus, e^{i arg})</div></details><section id=\"method.simd_recip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_recip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_recip\" class=\"fn\">simd_recip</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_conjugate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_conjugate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_conjugate\" class=\"fn\">simd_conjugate</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_scale\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_scale\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_scale\" class=\"fn\">simd_scale</a>(\n    self,\n    factor: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a>\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Multiplies this complex number by <code>factor</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_unscale\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_unscale\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_unscale\" class=\"fn\">simd_unscale</a>(\n    self,\n    factor: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a>\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Divides this complex number by <code>factor</code>.</div></details><section id=\"method.simd_floor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_floor\" class=\"fn\">simd_floor</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_ceil\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_ceil\" class=\"fn\">simd_ceil</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_round\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_round\" class=\"fn\">simd_round</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_trunc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_trunc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_trunc\" class=\"fn\">simd_trunc</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_fract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_fract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_fract\" class=\"fn\">simd_fract</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_abs\" class=\"fn\">simd_abs</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The absolute value of this complex number: <code>self / self.signum()</code>. <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_abs\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_signum\" class=\"fn\">simd_signum</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The exponential part of this complex number: <code>self / self.modulus()</code></div></details><section id=\"method.simd_mul_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_mul_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_mul_add\" class=\"fn\">simd_mul_add</a>(\n    self,\n    a: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;,\n    b: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_powi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_powi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_powi\" class=\"fn\">simd_powi</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_powf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_powf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_powf\" class=\"fn\">simd_powf</a>(self, n: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_powc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_powc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_powc\" class=\"fn\">simd_powc</a>(self, n: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_sqrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_sqrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_sqrt\" class=\"fn\">simd_sqrt</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_exp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_exp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_exp\" class=\"fn\">simd_exp</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_exp2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_exp2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_exp2\" class=\"fn\">simd_exp2</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_exp_m1\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_exp_m1\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_exp_m1\" class=\"fn\">simd_exp_m1</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_ln_1p\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_ln_1p\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_ln_1p\" class=\"fn\">simd_ln_1p</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_ln\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_ln\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_ln\" class=\"fn\">simd_ln</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_log\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_log\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_log\" class=\"fn\">simd_log</a>(self, base: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_log2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_log2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_log2\" class=\"fn\">simd_log2</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_log10\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_log10\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_log10\" class=\"fn\">simd_log10</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_cbrt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_cbrt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_cbrt\" class=\"fn\">simd_cbrt</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_hypot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_hypot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_hypot\" class=\"fn\">simd_hypot</a>(\n    self,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html\" title=\"trait simba::simd::simd_complex::SimdComplexField\">SimdComplexField</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a></h4></section></summary><div class='docblock'>Computes (self.conjugate() * self + other.conjugate() * other).sqrt()</div></details><section id=\"method.simd_sin\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_sin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_sin\" class=\"fn\">simd_sin</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_cos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_cos\" class=\"fn\">simd_cos</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_tan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_tan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_tan\" class=\"fn\">simd_tan</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_asin\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_asin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_asin\" class=\"fn\">simd_asin</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_acos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_acos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_acos\" class=\"fn\">simd_acos</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_atan\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_atan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_atan\" class=\"fn\">simd_atan</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_sin_cos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_sin_cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_sin_cos\" class=\"fn\">simd_sin_cos</a>(self) -&gt; (<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;, <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;)</h4></section><section id=\"method.simd_sinh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_sinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_sinh\" class=\"fn\">simd_sinh</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_cosh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_cosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_cosh\" class=\"fn\">simd_cosh</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_tanh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_tanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_tanh\" class=\"fn\">simd_tanh</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_asinh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_asinh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_asinh\" class=\"fn\">simd_asinh</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_acosh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_acosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_acosh\" class=\"fn\">simd_acosh</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><section id=\"method.simd_atanh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_atanh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#tymethod.simd_atanh\" class=\"fn\">simd_atanh</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_to_polar\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_complex.rs.html#33\">source</a><a href=\"#method.simd_to_polar\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_to_polar\" class=\"fn\">simd_to_polar</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a>, Self::<a class=\"associatedtype\" href=\"simba/simd/simd_complex/trait.SimdComplexField.html#associatedtype.SimdRealField\" title=\"type simba::simd::simd_complex::SimdComplexField::SimdRealField\">SimdRealField</a>)</h4></section></summary><div class='docblock'>The polar form of this complex number: (modulus, arg)</div></details><section id=\"method.simd_sinh_cosh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_complex.rs.html#33\">source</a><a href=\"#method.simd_sinh_cosh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_sinh_cosh\" class=\"fn\">simd_sinh_cosh</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.tuple.html\">(Self, Self)</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_sinc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_complex.rs.html#33\">source</a><a href=\"#method.simd_sinc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_sinc\" class=\"fn\">simd_sinc</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Cardinal sine</div></details><section id=\"method.simd_sinhc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_complex.rs.html#33\">source</a><a href=\"#method.simd_sinhc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_sinhc\" class=\"fn\">simd_sinhc</a>(self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_cosc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_complex.rs.html#33\">source</a><a href=\"#method.simd_cosc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_cosc\" class=\"fn\">simd_cosc</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Cardinal cos</div></details><section id=\"method.simd_coshc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_complex.rs.html#33\">source</a><a href=\"#method.simd_coshc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_complex/trait.SimdComplexField.html#method.simd_coshc\" class=\"fn\">simd_coshc</a>(self) -&gt; Self</h4></section></div></details>","SimdComplexField","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Num-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Num-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.FromStrRadixErr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.FromStrRadixErr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" class=\"associatedtype\">FromStrRadixErr</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a> as <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" title=\"type num_traits::Num::FromStrRadixErr\">FromStrRadixErr</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str_radix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_str_radix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\" class=\"fn\">from_str_radix</a>(\n    str: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.str.html\">str</a>,\n    radix: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;, &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a>&gt;::<a class=\"associatedtype\" href=\"num_traits/trait.Num.html#associatedtype.FromStrRadixErr\" title=\"type num_traits::Num::FromStrRadixErr\">FromStrRadixErr</a>&gt;</h4></section></summary><div class='docblock'>Convert from a string and radix (typically <code>2..=36</code>). <a href=\"num_traits/trait.Num.html#tymethod.from_str_radix\">Read more</a></div></details></div></details>","Num","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-BitAnd-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromPrimitive-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-FromPrimitive-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_i64\" class=\"fn\">from_i64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>i64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#tymethod.from_u64\" class=\"fn\">from_u64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>u64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_isize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_isize\" class=\"fn\">from_isize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>isize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i8\" class=\"fn\">from_i8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>i8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i16\" class=\"fn\">from_i16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>i16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i32\" class=\"fn\">from_i32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>i32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_usize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_usize\" class=\"fn\">from_usize</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts a <code>usize</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u8\" class=\"fn\">from_u8</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>u8</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u16\" class=\"fn\">from_u16</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>u16</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u32\" class=\"fn\">from_u32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts an <code>u32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f32\" class=\"fn\">from_f32</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts a <code>f32</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\" class=\"fn\">from_f64</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Converts a <code>f64</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#434\">source</a><a href=\"#method.from_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\" class=\"fn\">from_i128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>i128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/cast.rs.html#476\">source</a><a href=\"#method.from_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\" class=\"fn\">from_u128</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Converts an <code>u128</code> to return an optional value of this type. If the\nvalue cannot be represented by this type, then <code>None</code> is returned. <a href=\"num_traits/cast/trait.FromPrimitive.html#method.from_u128\">Read more</a></div></details></div></details>","FromPrimitive","rapier3d::math::SimdReal"],["<section id=\"impl-Field-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Field-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/scalar/field/trait.Field.html\" title=\"trait simba::scalar::field::Field\">Field</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section>","Field","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-RemAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-DivAssign-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-AutoSimd%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#impl-PartialEq-for-AutoSimd%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rapier3d::math::SimdBool","rapier3d::math::SimdReal"],["<section id=\"impl-Eq-for-AutoSimd%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#impl-Eq-for-AutoSimd%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","rapier3d::math::SimdBool","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-Not-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","rapier3d::math::SimdBool"],["<section id=\"impl-PrimitiveSimdValue-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-PrimitiveSimdValue-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section>","PrimitiveSimdValue","rapier3d::math::SimdBool"],["<section id=\"impl-PrimitiveSimdValue-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-PrimitiveSimdValue-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section>","PrimitiveSimdValue","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-Add-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.77.2/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-AutoSimd%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#impl-Clone-for-AutoSimd%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#43\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;N&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.2/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rapier3d::math::SimdBool","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdBool-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-SimdBool-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_bool/trait.SimdBool.html\" title=\"trait simba::simd::simd_bool::SimdBool\">SimdBool</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitmask\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.bitmask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.bitmask\" class=\"fn\">bitmask</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>A bit mask representing the boolean state of each lanes of <code>self</code>. <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.bitmask\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.and\" class=\"fn\">and</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Lane-wise bitwise and of the vector elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.or\" class=\"fn\">or</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Lane-wise bitwise or of the vector elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.xor\" class=\"fn\">xor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Lane-wise bitwise xor of the vector elements.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.all\" class=\"fn\">all</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Are all vector lanes true?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.any\" class=\"fn\">any</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is any vector lane true?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.none\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.none\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.none\" class=\"fn\">none</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Are all vector lanes false?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.if_else\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.if_else\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.if_else\" class=\"fn\">if_else</a>&lt;Res&gt;(\n    self,\n    if_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n    else_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res\n) -&gt; Res<div class=\"where\">where\n    Res: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&lt;SimdBool = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;,</div></h4></section></summary><div class='docblock'>Merges the value of <code>if_value()</code> and <code>else_value()</code> depending on the lanes of <code>self</code>. <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.if_else\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.if_else2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.if_else2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.if_else2\" class=\"fn\">if_else2</a>&lt;Res&gt;(\n    self,\n    if_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n    else_if: (impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res),\n    else_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res\n) -&gt; Res<div class=\"where\">where\n    Res: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&lt;SimdBool = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;,</div></h4></section></summary><div class='docblock'>Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and <code>else_value()</code> depending on the lanes of <code>self</code> and <code>else_if.0()</code>. <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.if_else2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.if_else3\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.if_else3\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.if_else3\" class=\"fn\">if_else3</a>&lt;Res&gt;(\n    self,\n    if_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res,\n    else_if: (impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res),\n    else_else_if: (impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;, impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res),\n    else_value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Res\n) -&gt; Res<div class=\"where\">where\n    Res: <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&lt;SimdBool = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;&gt;,</div></h4></section></summary><div class='docblock'>Merges the value of <code>if_value()</code> and <code>else_if.1()</code> and <code>else_else_if.1()</code> and <code>else_value()</code> depending on the lanes of <code>self</code> and <code>else_if.0()</code> and <code>else_else_if.0()</code>. <a href=\"simba/simd/simd_bool/trait.SimdBool.html#tymethod.if_else3\">Read more</a></div></details></div></details>","SimdBool","rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdSigned-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-SimdSigned-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_signed/trait.SimdSigned.html\" title=\"trait simba::simd::simd_signed::SimdSigned\">SimdSigned</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_abs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_abs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_signed/trait.SimdSigned.html#tymethod.simd_abs\" class=\"fn\">simd_abs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The absolute value of each lane of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_abs_sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_abs_sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_signed/trait.SimdSigned.html#tymethod.simd_abs_sub\" class=\"fn\">simd_abs_sub</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The absolute difference of each lane of <code>self</code>. <a href=\"simba/simd/simd_signed/trait.SimdSigned.html#tymethod.simd_abs_sub\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.simd_signum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.simd_signum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_signed/trait.SimdSigned.html#tymethod.simd_signum\" class=\"fn\">simd_signum</a>(&amp;self) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>The signum of each lane of <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_simd_positive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.is_simd_positive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_signed/trait.SimdSigned.html#tymethod.is_simd_positive\" class=\"fn\">is_simd_positive</a>(&amp;self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Tests which lane is positive.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_simd_negative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.is_simd_negative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_signed/trait.SimdSigned.html#tymethod.is_simd_negative\" class=\"fn\">is_simd_negative</a>(&amp;self) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Tests which lane is negative.</div></details></div></details>","SimdSigned","rapier3d::math::SimdReal"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdValue-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#impl-SimdValue-for-AutoSimd%3C%5Bbool;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Element\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" class=\"associatedtype\">Element</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The type of the elements of each lane of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdBool\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SimdBool\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" class=\"associatedtype\">SimdBool</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Type of the result of comparing two SIMD values like <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.lanes\" class=\"fn\">lanes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of lanes of this SIMD value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.splat\" class=\"fn\">splat</a>(\n    val: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Initializes an SIMD value with each lanes set to <code>val</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.extract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\" class=\"fn\">extract</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.extract_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract_unchecked\" class=\"fn\">extract_unchecked</a>(\n    &amp;self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\" class=\"fn\">replace</a>(\n    &amp;mut self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.replace_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace_unchecked\" class=\"fn\">replace_unchecked</a>(\n    &amp;mut self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1535-1543\">source</a><a href=\"#method.select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\" class=\"fn\">select</a>(\n    self,\n    cond: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a>,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#39-41\">source</a><a href=\"#method.map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\" class=\"fn\">map_lanes</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#58-64\">source</a><a href=\"#method.zip_map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\" class=\"fn\">zip_map_lanes</a>(\n    self,\n    b: Self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>\n) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code> paired with the corresponding lane of <code>b</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\">Read more</a></div></details></div></details>","SimdValue","rapier3d::math::SimdBool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdValue-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#impl-SimdValue-for-AutoSimd%3C%5Bf32;+4%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> for <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Element\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" class=\"associatedtype\">Element</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>The type of the elements of each lane of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdBool\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SimdBool\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" class=\"associatedtype\">SimdBool</a> = <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Type of the result of comparing two SIMD values like <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.lanes\" class=\"fn\">lanes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of lanes of this SIMD value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.splat\" class=\"fn\">splat</a>(val: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Initializes an SIMD value with each lanes set to <code>val</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.extract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\" class=\"fn\">extract</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.extract_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract_unchecked\" class=\"fn\">extract_unchecked</a>(\n    &amp;self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>\n) -&gt; &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>, val: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.replace_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace_unchecked\" class=\"fn\">replace_unchecked</a>(\n    &amp;mut self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/auto_simd_impl.rs.html#1471-1479\">source</a><a href=\"#method.select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\" class=\"fn\">select</a>(\n    self,\n    cond: &lt;<a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a>,\n    other: <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;\n) -&gt; <a class=\"struct\" href=\"simba/simd/auto_simd_impl/struct.AutoSimd.html\" title=\"struct simba::simd::auto_simd_impl::AutoSimd\">AutoSimd</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.array.html\">4</a>]&gt;</h4></section></summary><div class='docblock'>Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#39-41\">source</a><a href=\"#method.map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\" class=\"fn\">map_lanes</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#58-64\">source</a><a href=\"#method.zip_map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\" class=\"fn\">zip_map_lanes</a>(\n    self,\n    b: Self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>\n) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code> paired with the corresponding lane of <code>b</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\">Read more</a></div></details></div></details>","SimdValue","rapier3d::math::SimdReal"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()