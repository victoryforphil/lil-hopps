(function() {var type_impls = {
"parry3d":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#311-315\">source</a><a href=\"#impl-Default-for-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeafData: <a class=\"trait\" href=\"parry3d/partitioning/trait.IndexedData.html\" title=\"trait parry3d::partitioning::IndexedData\">IndexedData</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"type\" href=\"parry3d/partitioning/type.Qbvh.html\" title=\"type parry3d::partitioning::Qbvh\">Qbvh</a>&lt;LeafData&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#312-314\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","parry3d::partitioning::SimdQbvh"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/build.rs.html#261-274\">source</a><a href=\"#impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeafData: <a class=\"trait\" href=\"parry3d/partitioning/trait.IndexedData.html\" title=\"trait parry3d::partitioning::IndexedData\">IndexedData</a>&gt; <a class=\"type\" href=\"parry3d/partitioning/type.Qbvh.html\" title=\"type parry3d::partitioning::Qbvh\">Qbvh</a>&lt;LeafData&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_and_rebuild\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/build.rs.html#263-273\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.clear_and_rebuild\" class=\"fn\">clear_and_rebuild</a>(\n    &amp;mut self,\n    data_gen: impl <a class=\"trait\" href=\"parry3d/partitioning/trait.QbvhDataGenerator.html\" title=\"trait parry3d::partitioning::QbvhDataGenerator\">QbvhDataGenerator</a>&lt;LeafData&gt;,\n    dilation_factor: <a class=\"type\" href=\"parry3d/math/type.Real.html\" title=\"type parry3d::math::Real\">Real</a>\n)</h4></section></summary><div class=\"docblock\"><p>Clears this quaternary BVH and rebuilds it from a new set of data and Aabbs.</p>\n</div></details></div></details>",0,"parry3d::partitioning::SimdQbvh"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/build.rs.html#276-446\">source</a><a href=\"#impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeafData: <a class=\"trait\" href=\"parry3d/partitioning/trait.IndexedData.html\" title=\"trait parry3d::partitioning::IndexedData\">IndexedData</a>&gt; <a class=\"type\" href=\"parry3d/partitioning/type.Qbvh.html\" title=\"type parry3d::partitioning::Qbvh\">Qbvh</a>&lt;LeafData&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_and_rebuild_with_splitter\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/build.rs.html#278-330\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.clear_and_rebuild_with_splitter\" class=\"fn\">clear_and_rebuild_with_splitter</a>(\n    &amp;mut self,\n    data_gen: impl <a class=\"trait\" href=\"parry3d/partitioning/trait.QbvhDataGenerator.html\" title=\"trait parry3d::partitioning::QbvhDataGenerator\">QbvhDataGenerator</a>&lt;LeafData&gt;,\n    splitter: impl QbvhDataSplitter&lt;LeafData&gt;,\n    dilation_factor: <a class=\"type\" href=\"parry3d/math/type.Real.html\" title=\"type parry3d::math::Real\">Real</a>\n)</h4></section></summary><div class=\"docblock\"><p>Clears this quaternary BVH and rebuilds it from a new set of data and Aabbs.</p>\n</div></details></div></details>",0,"parry3d::partitioning::SimdQbvh"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#318-406\">source</a><a href=\"#impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeafData: <a class=\"trait\" href=\"parry3d/partitioning/trait.IndexedData.html\" title=\"trait parry3d::partitioning::IndexedData\">IndexedData</a>&gt; <a class=\"type\" href=\"parry3d/partitioning/type.Qbvh.html\" title=\"type parry3d::partitioning::Qbvh\">Qbvh</a>&lt;LeafData&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#320-328\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Initialize an empty Qbvh.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_data_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#346-348\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.iter_data_mut\" class=\"fn\">iter_data_mut</a>(\n    &amp;mut self\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (<a class=\"struct\" href=\"parry3d/partitioning/struct.NodeIndex.html\" title=\"struct parry3d::partitioning::NodeIndex\">NodeIndex</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;mut LeafData</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Iterates mutably through all the leaf data in this Qbvh.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_data\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#351-353\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.iter_data\" class=\"fn\">iter_data</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = (<a class=\"struct\" href=\"parry3d/partitioning/struct.NodeIndex.html\" title=\"struct parry3d::partitioning::NodeIndex\">NodeIndex</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;LeafData</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate through all the leaf data in this Qbvh.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.node_aabb\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#356-360\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.node_aabb\" class=\"fn\">node_aabb</a>(&amp;self, node_id: <a class=\"struct\" href=\"parry3d/partitioning/struct.NodeIndex.html\" title=\"struct parry3d::partitioning::NodeIndex\">NodeIndex</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry3d/bounding_volume/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::Aabb\">Aabb</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The Aabb of the given node.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leaf_data\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#365-376\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.leaf_data\" class=\"fn\">leaf_data</a>(&amp;self, node_id: <a class=\"struct\" href=\"parry3d/partitioning/struct.NodeIndex.html\" title=\"struct parry3d::partitioning::NodeIndex\">NodeIndex</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LeafData&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the data associated to a given leaf.</p>\n<p>Returns <code>None</code> if the provided node ID does not identify a leaf.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_nodes\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#383-385\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.raw_nodes\" class=\"fn\">raw_nodes</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"parry3d/partitioning/struct.QbvhNode.html\" title=\"struct parry3d::partitioning::QbvhNode\">QbvhNode</a>]</h4></section></summary><div class=\"docblock\"><p>The raw nodes of this BVH.</p>\n<p>If this Qbvh isn’t empty, the first element of the returned slice is the root of the\ntree. The other elements are not arranged in any particular order.\nThe more high-level traversal methods should be used instead of this.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_proxies\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#392-394\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.raw_proxies\" class=\"fn\">raw_proxies</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"parry3d/partitioning/struct.QbvhProxy.html\" title=\"struct parry3d::partitioning::QbvhProxy\">QbvhProxy</a>&lt;LeafData&gt;]</h4></section></summary><div class=\"docblock\"><p>The raw proxies of this BVH.</p>\n<p>If this Qbvh isn’t empty, the first element of the returned slice is the root of the\ntree. The other elements are not arranged in any particular order.\nThe more high-level traversal methods should be used instead of this.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scaled\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/qbvh.rs.html#399-405\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.scaled\" class=\"fn\">scaled</a>(self, scale: &amp;<a class=\"type\" href=\"parry3d/math/type.Vector.html\" title=\"type parry3d::math::Vector\">Vector</a>&lt;<a class=\"type\" href=\"parry3d/math/type.Real.html\" title=\"type parry3d::math::Real\">Real</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes a scaled version of this Qbvh.</p>\n<p>This will apply the scale to each Aabb on this BVH.</p>\n</div></details></div></details>",0,"parry3d::partitioning::SimdQbvh"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/update.rs.html#40-609\">source</a><a href=\"#impl-GenericQbvh%3CLeafData,+DefaultStorage%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LeafData: <a class=\"trait\" href=\"parry3d/partitioning/trait.IndexedData.html\" title=\"trait parry3d::partitioning::IndexedData\">IndexedData</a>&gt; <a class=\"type\" href=\"parry3d/partitioning/type.Qbvh.html\" title=\"type parry3d::partitioning::Qbvh\">Qbvh</a>&lt;LeafData&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/update.rs.html#42-56\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.remove\" class=\"fn\">remove</a>(&amp;mut self, data: LeafData) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LeafData&gt;</h4></section></summary><div class=\"docblock\"><p>Immediately remove a leaf from this QBVH.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_update_or_insert\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/update.rs.html#61-153\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.pre_update_or_insert\" class=\"fn\">pre_update_or_insert</a>(&amp;mut self, data: LeafData)</h4></section></summary><div class=\"docblock\"><p>Prepare a new leaf for insertion into this QBVH (or for update if it already exists).</p>\n<p>The insertion or update will be completely valid only after the next call to <a href=\"parry3d/partitioning/struct.GenericQbvh.html#method.refit\" title=\"method parry3d::partitioning::GenericQbvh::refit\"><code>Qbvh::refit</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.refit\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/update.rs.html#266-327\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.refit\" class=\"fn\">refit</a>&lt;F&gt;(\n    &amp;mut self,\n    margin: <a class=\"type\" href=\"parry3d/math/type.Real.html\" title=\"type parry3d::math::Real\">Real</a>,\n    workspace: &amp;mut <a class=\"struct\" href=\"parry3d/partitioning/struct.QbvhUpdateWorkspace.html\" title=\"struct parry3d::partitioning::QbvhUpdateWorkspace\">QbvhUpdateWorkspace</a>,\n    aabb_builder: F\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;LeafData</a>) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::Aabb\">Aabb</a>,</div></h4></section></summary><div class=\"docblock\"><p>Update all the nodes that have been marked as dirty by <a href=\"parry3d/partitioning/struct.GenericQbvh.html#method.pre_update_or_insert\" title=\"method parry3d::partitioning::GenericQbvh::pre_update_or_insert\"><code>Qbvh::pre_update_or_insert</code></a>,\nand <a href=\"parry3d/partitioning/struct.GenericQbvh.html#method.remove\" title=\"method parry3d::partitioning::GenericQbvh::remove\"><code>Qbvh::remove</code></a>.</p>\n<p>This will not alter the topology of this <code>Qbvh</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rebalance\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/partitioning/qbvh/update.rs.html#333-423\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/partitioning/type.Qbvh.html#tymethod.rebalance\" class=\"fn\">rebalance</a>(&amp;mut self, margin: <a class=\"type\" href=\"parry3d/math/type.Real.html\" title=\"type parry3d::math::Real\">Real</a>, workspace: &amp;mut <a class=\"struct\" href=\"parry3d/partitioning/struct.QbvhUpdateWorkspace.html\" title=\"struct parry3d::partitioning::QbvhUpdateWorkspace\">QbvhUpdateWorkspace</a>)</h4></section></summary><div class=\"docblock\"><p>Rebalances the <code>Qbvh</code> tree.</p>\n<p>This will modify the topology of this tree. This assumes that the leaf AABBs have\nalready been updated with <a href=\"parry3d/partitioning/struct.GenericQbvh.html#method.refit\" title=\"method parry3d::partitioning::GenericQbvh::refit\"><code>Qbvh::refit</code></a>.</p>\n</div></details></div></details>",0,"parry3d::partitioning::SimdQbvh"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()