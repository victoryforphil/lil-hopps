(function() {var type_impls = {
"rapier3d":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#impl-Clone-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/bounding_volume/aabb_support_map.rs.html#9\">source</a><a href=\"#impl-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.aabb\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/bounding_volume/aabb_support_map.rs.html#12\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.aabb\" class=\"fn\">aabb</a>(&amp;self, pos: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class=\"docblock\"><p>Computes the world-space <a href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\"><code>Aabb</code></a> of this cone, transformed by <code>pos</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.local_aabb\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/bounding_volume/aabb_support_map.rs.html#18\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.local_aabb\" class=\"fn\">local_aabb</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class=\"docblock\"><p>Computes the local-space <a href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\"><code>Aabb</code></a> of this cone.</p>\n</div></details></div></details>",0,"rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/bounding_volume/bounding_sphere_cone.rs.html#6\">source</a><a href=\"#impl-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bounding_sphere\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/bounding_volume/bounding_sphere_cone.rs.html#9\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.bounding_sphere\" class=\"fn\">bounding_sphere</a>(\n    &amp;self,\n    pos: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;\n) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/bounding_sphere/struct.BoundingSphere.html\" title=\"struct parry3d::bounding_volume::bounding_sphere::BoundingSphere\">BoundingSphere</a></h4></section></summary><div class=\"docblock\"><p>Computes the world-space bounding sphere of this cone, transformed by <code>pos</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.local_bounding_sphere\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/bounding_volume/bounding_sphere_cone.rs.html#16\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.local_bounding_sphere\" class=\"fn\">local_bounding_sphere</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/bounding_sphere/struct.BoundingSphere.html\" title=\"struct parry3d::bounding_volume::bounding_sphere::BoundingSphere\">BoundingSphere</a></h4></section></summary><div class=\"docblock\"><p>Computes the local-space bounding sphere of this cone.</p>\n</div></details></div></details>",0,"rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#35\">source</a><a href=\"#impl-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#41\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.new\" class=\"fn\">new</a>(half_height: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, radius: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h4></section></summary><div class=\"docblock\"><p>Creates a new cone.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments:</h5>\n<ul>\n<li><code>half_height</code> - the half length of the cone along the <code>y</code> axis.</li>\n<li><code>radius</code> - the length of the cone along all other axis.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scaled\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#56-60\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.scaled\" class=\"fn\">scaled</a>(\n    self,\n    scale: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, 3, 1&gt;&gt;,\n    nsubdivs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;<a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a>, <a class=\"struct\" href=\"rapier3d/geometry/struct.ConvexPolyhedron.html\" title=\"struct rapier3d::geometry::ConvexPolyhedron\">ConvexPolyhedron</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Computes a scaled version of this cone.</p>\n<p>If the scaling factor is non-uniform, then it can’t be represented as\ncone. Instead, a convex polyhedral approximation (with <code>nsubdivs</code>\nsubdivisions) is returned. Returns <code>None</code> if that approximation had degenerate\nnormals (for example if the scaling factor along one axis is zero).</p>\n</div></details></div></details>",0,"rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/transformation/to_outline/cone_to_outline.rs.html#6\">source</a><a href=\"#impl-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_outline\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/transformation/to_outline/cone_to_outline.rs.html#8\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.to_outline\" class=\"fn\">to_outline</a>(\n    &amp;self,\n    nsubdiv: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>\n) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">2</a>]&gt;)</h4></section></summary><div class=\"docblock\"><p>Outlines this cone’s shape using polylines.</p>\n</div></details></div></details>",0,"rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/transformation/to_trimesh/cone_to_trimesh.rs.html#6\">source</a><a href=\"#impl-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_trimesh\" class=\"method\"><a class=\"src rightside\" href=\"src/parry3d/transformation/to_trimesh/cone_to_trimesh.rs.html#8\">source</a><h4 class=\"code-header\">pub fn <a href=\"parry3d/shape/cone/struct.Cone.html#tymethod.to_trimesh\" class=\"fn\">to_trimesh</a>(\n    &amp;self,\n    nsubdiv: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>\n) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">3</a>]&gt;)</h4></section></summary><div class=\"docblock\"><p>Discretize the boundary of this cone as a triangle-mesh.</p>\n</div></details></div></details>",0,"rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#impl-Debug-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#impl-PartialEq-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PointQuery-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_cone.rs.html#6\">source</a><a href=\"#impl-PointQuery-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parry3d/query/point/point_query/trait.PointQuery.html\" title=\"trait parry3d::query::point::point_query::PointQuery\">PointQuery</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_local_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_cone.rs.html#8\">source</a><a href=\"#method.project_local_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#tymethod.project_local_point\" class=\"fn\">project_local_point</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"struct\" href=\"parry3d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry3d::query::point::point_query::PointProjection\">PointProjection</a></h4></section></summary><div class='docblock'>Projects a point on <code>self</code>. <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#tymethod.project_local_point\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_local_point_and_get_feature\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_cone.rs.html#65-68\">source</a><a href=\"#method.project_local_point_and_get_feature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#tymethod.project_local_point_and_get_feature\" class=\"fn\">project_local_point_and_get_feature</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;\n) -&gt; (<a class=\"struct\" href=\"parry3d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry3d::query::point::point_query::PointProjection\">PointProjection</a>, <a class=\"enum\" href=\"rapier3d/geometry/enum.FeatureId.html\" title=\"enum rapier3d::geometry::FeatureId\">FeatureId</a>)</h4></section></summary><div class='docblock'>Projects a point on the boundary of <code>self</code> and returns the id of the\nfeature the point was projected on.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_local_point_with_max_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#43-48\">source</a><a href=\"#method.project_local_point_with_max_dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.project_local_point_with_max_dist\" class=\"fn\">project_local_point_with_max_dist</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>,\n    max_dist: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry3d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry3d::query::point::point_query::PointProjection\">PointProjection</a>&gt;</h4></section></summary><div class='docblock'>Projects a point on <code>self</code>, unless the projection lies further than the given max distance. <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.project_local_point_with_max_dist\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_point_with_max_dist\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#58-64\">source</a><a href=\"#method.project_point_with_max_dist\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.project_point_with_max_dist\" class=\"fn\">project_point_with_max_dist</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>,\n    max_dist: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry3d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry3d::query::point::point_query::PointProjection\">PointProjection</a>&gt;</h4></section></summary><div class='docblock'>Projects a point on <code>self</code> transformed by <code>m</code>, unless the projection lies further than the given max distance.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance_to_local_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#80\">source</a><a href=\"#method.distance_to_local_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.distance_to_local_point\" class=\"fn\">distance_to_local_point</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Computes the minimal distance between a point and <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_local_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#92\">source</a><a href=\"#method.contains_local_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.contains_local_point\" class=\"fn\">contains_local_point</a>(&amp;self, pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests if the given point is inside of <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#97\">source</a><a href=\"#method.project_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.project_point\" class=\"fn\">project_point</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"struct\" href=\"parry3d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry3d::query::point::point_query::PointProjection\">PointProjection</a></h4></section></summary><div class='docblock'>Projects a point on <code>self</code> transformed by <code>m</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance_to_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#104\">source</a><a href=\"#method.distance_to_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.distance_to_point\" class=\"fn\">distance_to_point</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Computes the minimal distance between a point and <code>self</code> transformed by <code>m</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_point_and_get_feature\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#110-114\">source</a><a href=\"#method.project_point_and_get_feature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.project_point_and_get_feature\" class=\"fn\">project_point_and_get_feature</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;\n) -&gt; (<a class=\"struct\" href=\"parry3d/query/point/point_query/struct.PointProjection.html\" title=\"struct parry3d::query::point::point_query::PointProjection\">PointProjection</a>, <a class=\"enum\" href=\"rapier3d/geometry/enum.FeatureId.html\" title=\"enum rapier3d::geometry::FeatureId\">FeatureId</a>)</h4></section></summary><div class='docblock'>Projects a point on the boundary of <code>self</code> transformed by <code>m</code> and returns the id of the\nfeature the point was projected on.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/point/point_query.rs.html#121\">source</a><a href=\"#method.contains_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/point/point_query/trait.PointQuery.html#method.contains_point\" class=\"fn\">contains_point</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests if the given point is inside of <code>self</code> transformed by <code>m</code>.</div></details></div></details>","PointQuery","rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PolygonalFeatureMap-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/polygonal_feature_map.rs.html#108\">source</a><a href=\"#impl-PolygonalFeatureMap-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rapier3d/geometry/trait.PolygonalFeatureMap.html\" title=\"trait rapier3d::geometry::PolygonalFeatureMap\">PolygonalFeatureMap</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.local_support_feature\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/polygonal_feature_map.rs.html#109\">source</a><a href=\"#method.local_support_feature\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.PolygonalFeatureMap.html#tymethod.local_support_feature\" class=\"fn\">local_support_feature</a>(\n    &amp;self,\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, 3, 1&gt;&gt;&gt;,\n    out_features: &amp;mut <a class=\"struct\" href=\"rapier3d/geometry/struct.PolygonalFeature.html\" title=\"struct rapier3d::geometry::PolygonalFeature\">PolygonalFeature</a>\n)</h4></section></summary><div class='docblock'>Compute the support polygonal face of <code>self</code> towards the <code>dir</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_convex_polyhedron\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/polygonal_feature_map.rs.html#25\">source</a><a href=\"#method.is_convex_polyhedron\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.PolygonalFeatureMap.html#method.is_convex_polyhedron\" class=\"fn\">is_convex_polyhedron</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is this shape a <code>ConvexPolyhedron</code>?</div></details></div></details>","PolygonalFeatureMap","rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RayCast-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/query/ray/ray_support_map.rs.html#91\">source</a><a href=\"#impl-RayCast-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"parry3d/query/ray/ray/trait.RayCast.html\" title=\"trait parry3d::query::ray::ray::RayCast\">RayCast</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_local_ray_and_get_normal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/ray/ray_support_map.rs.html#92-97\">source</a><a href=\"#method.cast_local_ray_and_get_normal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/ray/ray/trait.RayCast.html#tymethod.cast_local_ray_and_get_normal\" class=\"fn\">cast_local_ray_and_get_normal</a>(\n    &amp;self,\n    ray: &amp;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.Ray.html\" title=\"struct parry3d::query::ray::ray::Ray\">Ray</a>,\n    max_toi: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.RayIntersection.html\" title=\"struct parry3d::query::ray::ray::RayIntersection\">RayIntersection</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact, and normal between this transformed shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_local_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/ray/ray.rs.html#126\">source</a><a href=\"#method.cast_local_ray\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/ray/ray/trait.RayCast.html#method.cast_local_ray\" class=\"fn\">cast_local_ray</a>(&amp;self, ray: &amp;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.Ray.html\" title=\"struct parry3d::query::ray::ray::Ray\">Ray</a>, max_toi: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact between this transform shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects_local_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/ray/ray.rs.html#141\">source</a><a href=\"#method.intersects_local_ray\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/ray/ray/trait.RayCast.html#method.intersects_local_ray\" class=\"fn\">intersects_local_ray</a>(&amp;self, ray: &amp;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.Ray.html\" title=\"struct parry3d::query::ray::ray::Ray\">Ray</a>, max_toi: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests whether a ray intersects this transformed shape.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/ray/ray.rs.html#146\">source</a><a href=\"#method.cast_ray\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/ray/ray/trait.RayCast.html#method.cast_ray\" class=\"fn\">cast_ray</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    ray: &amp;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.Ray.html\" title=\"struct parry3d::query::ray::ray::Ray\">Ray</a>,\n    max_toi: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact between this transform shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_ray_and_get_normal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/ray/ray.rs.html#152-158\">source</a><a href=\"#method.cast_ray_and_get_normal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/ray/ray/trait.RayCast.html#method.cast_ray_and_get_normal\" class=\"fn\">cast_ray_and_get_normal</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    ray: &amp;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.Ray.html\" title=\"struct parry3d::query::ray::ray::Ray\">Ray</a>,\n    max_toi: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>,\n    solid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.RayIntersection.html\" title=\"struct parry3d::query::ray::ray::RayIntersection\">RayIntersection</a>&gt;</h4></section></summary><div class='docblock'>Computes the time of impact, and normal between this transformed shape and a ray.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects_ray\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/query/ray/ray.rs.html#166\">source</a><a href=\"#method.intersects_ray\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"parry3d/query/ray/ray/trait.RayCast.html#method.intersects_ray\" class=\"fn\">intersects_ray</a>(\n    &amp;self,\n    m: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    ray: &amp;<a class=\"struct\" href=\"parry3d/query/ray/ray/struct.Ray.html\" title=\"struct parry3d::query::ray::ray::Ray\">Ray</a>,\n    max_toi: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests whether a ray intersects this transformed shape.</div></details></div></details>","RayCast","rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shape-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1233\">source</a><a href=\"#impl-Shape-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rapier3d/geometry/trait.Shape.html\" title=\"trait rapier3d::geometry::Shape\">Shape</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_box\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1235\">source</a><a href=\"#method.clone_box\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.clone_box\" class=\"fn\">clone_box</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"rapier3d/geometry/trait.Shape.html\" title=\"trait rapier3d::geometry::Shape\">Shape</a>&gt;</h4></section></summary><div class='docblock'>Clones this shape into a boxed trait-object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_local_aabb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1239\">source</a><a href=\"#method.compute_local_aabb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.compute_local_aabb\" class=\"fn\">compute_local_aabb</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class='docblock'>Computes the <a href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\"><code>Aabb</code></a> of this shape.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_local_bounding_sphere\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1243\">source</a><a href=\"#method.compute_local_bounding_sphere\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.compute_local_bounding_sphere\" class=\"fn\">compute_local_bounding_sphere</a>(&amp;self) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/bounding_sphere/struct.BoundingSphere.html\" title=\"struct parry3d::bounding_volume::bounding_sphere::BoundingSphere\">BoundingSphere</a></h4></section></summary><div class='docblock'>Computes the bounding-sphere of this shape.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_aabb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1247\">source</a><a href=\"#method.compute_aabb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.compute_aabb\" class=\"fn\">compute_aabb</a>(\n    &amp;self,\n    position: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;\n) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class='docblock'>Computes the <a href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\"><code>Aabb</code></a> of this shape with the given position.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mass_properties\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1251\">source</a><a href=\"#method.mass_properties\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.mass_properties\" class=\"fn\">mass_properties</a>(&amp;self, density: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"rapier3d/dynamics/struct.MassProperties.html\" title=\"struct rapier3d::dynamics::MassProperties\">MassProperties</a></h4></section></summary><div class='docblock'>Compute the mass-properties of this shape given its uniform density.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_convex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1255\">source</a><a href=\"#method.is_convex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.is_convex\" class=\"fn\">is_convex</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is this shape known to be convex? <a href=\"rapier3d/geometry/trait.Shape.html#method.is_convex\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shape_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1259\">source</a><a href=\"#method.shape_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.shape_type\" class=\"fn\">shape_type</a>(&amp;self) -&gt; <a class=\"enum\" href=\"rapier3d/geometry/enum.ShapeType.html\" title=\"enum rapier3d::geometry::ShapeType\">ShapeType</a></h4></section></summary><div class='docblock'>Gets the type tag of this shape.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_typed_shape\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1263\">source</a><a href=\"#method.as_typed_shape\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.as_typed_shape\" class=\"fn\">as_typed_shape</a>(&amp;self) -&gt; <a class=\"enum\" href=\"rapier3d/geometry/enum.TypedShape.html\" title=\"enum rapier3d::geometry::TypedShape\">TypedShape</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Gets the underlying shape as an enum.</div></details><section id=\"method.ccd_thickness\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1267\">source</a><a href=\"#method.ccd_thickness\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.ccd_thickness\" class=\"fn\">ccd_thickness</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.ccd_angular_thickness\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1271\">source</a><a href=\"#method.ccd_angular_thickness\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#tymethod.ccd_angular_thickness\" class=\"fn\">ccd_angular_thickness</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_support_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1278\">source</a><a href=\"#method.as_support_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.as_support_map\" class=\"fn\">as_support_map</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"rapier3d/geometry/trait.SupportMap.html\" title=\"trait rapier3d::geometry::SupportMap\">SupportMap</a>&gt;</h4></section></summary><div class='docblock'>Convents this shape into its support mapping, if it has one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_polygonal_feature_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#1282\">source</a><a href=\"#method.as_polygonal_feature_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.as_polygonal_feature_map\" class=\"fn\">as_polygonal_feature_map</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;dyn <a class=\"trait\" href=\"rapier3d/geometry/trait.PolygonalFeatureMap.html\" title=\"trait rapier3d::geometry::PolygonalFeatureMap\">PolygonalFeatureMap</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>)&gt;</h4></section></summary><div class='docblock'>Converts this shape to a polygonal feature-map, if it is one.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_bounding_sphere\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#290\">source</a><a href=\"#method.compute_bounding_sphere\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.compute_bounding_sphere\" class=\"fn\">compute_bounding_sphere</a>(\n    &amp;self,\n    position: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;\n) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/bounding_sphere/struct.BoundingSphere.html\" title=\"struct parry3d::bounding_volume::bounding_sphere::BoundingSphere\">BoundingSphere</a></h4></section></summary><div class='docblock'>Computes the bounding-sphere of this shape with the given position.</div></details><section id=\"method.as_composite_shape\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#328\">source</a><a href=\"#method.as_composite_shape\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.as_composite_shape\" class=\"fn\">as_composite_shape</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"rapier3d/geometry/trait.SimdCompositeShape.html\" title=\"trait rapier3d::geometry::SimdCompositeShape\">SimdCompositeShape</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.feature_normal_at_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#342-346\">source</a><a href=\"#method.feature_normal_at_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.feature_normal_at_point\" class=\"fn\">feature_normal_at_point</a>(\n    &amp;self,\n    _feature: <a class=\"enum\" href=\"rapier3d/geometry/enum.FeatureId.html\" title=\"enum rapier3d::geometry::FeatureId\">FeatureId</a>,\n    _point: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, 3, 1&gt;&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The shape’s normal at the given point located on a specific feature.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_swept_aabb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/shape.rs.html#352\">source</a><a href=\"#method.compute_swept_aabb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.Shape.html#method.compute_swept_aabb\" class=\"fn\">compute_swept_aabb</a>(\n    &amp;self,\n    start_pos: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    end_pos: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;\n) -&gt; <a class=\"struct\" href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\">Aabb</a></h4></section></summary><div class='docblock'>Computes the swept <a href=\"parry3d/bounding_volume/aabb/struct.Aabb.html\" title=\"struct parry3d::bounding_volume::aabb::Aabb\"><code>Aabb</code></a> of this shape, i.e., the space it would occupy by moving from\nthe given start position to the given end position.</div></details></div></details>","Shape","rapier3d::geometry::Cone"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SupportMap-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#80\">source</a><a href=\"#impl-SupportMap-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rapier3d/geometry/trait.SupportMap.html\" title=\"trait rapier3d::geometry::SupportMap\">SupportMap</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.local_support_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#82\">source</a><a href=\"#method.local_support_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.SupportMap.html#tymethod.local_support_point\" class=\"fn\">local_support_point</a>(\n    &amp;self,\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, 3, 1&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.local_support_point_toward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/support_map.rs.html#18\">source</a><a href=\"#method.local_support_point_toward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.SupportMap.html#method.local_support_point_toward\" class=\"fn\">local_support_point_toward</a>(\n    &amp;self,\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, 3, 1&gt;&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class='docblock'>Same as <code>self.local_support_point</code> except that <code>dir</code> is normalized.</div></details><section id=\"method.support_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/support_map.rs.html#26\">source</a><a href=\"#method.support_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.SupportMap.html#method.support_point\" class=\"fn\">support_point</a>(\n    &amp;self,\n    transform: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, 3, 1&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.support_point_toward\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/support_map.rs.html#32-36\">source</a><a href=\"#method.support_point_toward\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rapier3d/geometry/trait.SupportMap.html#method.support_point_toward\" class=\"fn\">support_point_toward</a>(\n    &amp;self,\n    transform: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>&gt;&gt;, 3&gt;,\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, 3, 1&gt;&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class='docblock'>Same as <code>self.support_point</code> except that <code>dir</code> is normalized.</div></details></div></details>","SupportMap","rapier3d::geometry::Cone"],["<section id=\"impl-Copy-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#impl-Copy-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section>","Copy","rapier3d::geometry::Cone"],["<section id=\"impl-StructuralPartialEq-for-Cone\" class=\"impl\"><a class=\"src rightside\" href=\"src/parry3d/shape/cone.rs.html#26\">source</a><a href=\"#impl-StructuralPartialEq-for-Cone\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"parry3d/shape/cone/struct.Cone.html\" title=\"struct parry3d::shape::cone::Cone\">Cone</a></h3></section>","StructuralPartialEq","rapier3d::geometry::Cone"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()