(function() {var type_impls = {
"three_d_asset":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#376\">source</a><a href=\"#impl-AbsDiffEq-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" class=\"associatedtype\">Epsilon</a> = &lt;S as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#380\">source</a><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\" class=\"fn\">default_epsilon</a>() -&gt; &lt;S as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#385\">source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" class=\"fn\">abs_diff_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;,\n    epsilon: &lt;S as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/abs_diff_eq.rs.html#26\">source</a><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#method.abs_diff_ne\" class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" title=\"method approx::abs_diff_eq::AbsDiffEq::abs_diff_eq\"><code>AbsDiffEq::abs_diff_eq</code></a>.</div></details></div></details>","AbsDiffEq","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#320-324\">source</a><a href=\"#impl-Add%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#320-324\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a Quaternion<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#320-324\">source</a><a href=\"#impl-Add-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#320-324\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#326-328\">source</a><a href=\"#impl-AddAssign-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#326-328\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#557\">source</a><a href=\"#impl-AsMut%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#559\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[S; 4]>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#604\">source</a><a href=\"#impl-AsMut%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#606\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<(S, S, S, S)>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#550\">source</a><a href=\"#impl-AsRef%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#552\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[S; 4]>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#597\">source</a><a href=\"#impl-AsRef%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#599\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<(S, S, S, S)>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#impl-Clone-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#impl-Debug-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CS%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#291-295\">source</a><a href=\"#impl-Div%3CS%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;S&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#291-295\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: S) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<S>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CS%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#297-299\">source</a><a href=\"#impl-DivAssign%3CS%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;S&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#297-299\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scalar: S)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<S>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#564\">source</a><a href=\"#impl-From%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#566\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a>) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[S; 4]>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#611\">source</a><a href=\"#impl-From%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#613\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a>) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(S, S, S, S)>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBasis3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/rotation.rs.html#341\">source</a><a href=\"#impl-From%3CBasis3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cgmath/rotation/struct.Basis3.html\" title=\"struct cgmath::rotation::Basis3\">Basis3</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/rotation.rs.html#343\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(b: <a class=\"struct\" href=\"cgmath/rotation/struct.Basis3.html\" title=\"struct cgmath::rotation::Basis3\">Basis3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Basis3<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEuler%3CA%3E%3E-for-Quaternion%3C%3CA+as+Angle%3E::Unitless%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#251-253\">source</a><a href=\"#impl-From%3CEuler%3CA%3E%3E-for-Quaternion%3C%3CA+as+Angle%3E::Unitless%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cgmath/euler/struct.Euler.html\" title=\"struct cgmath::euler::Euler\">Euler</a>&lt;A&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;&lt;A as <a class=\"trait\" href=\"three_d_asset/prelude/trait.Angle.html\" title=\"trait three_d_asset::prelude::Angle\">Angle</a>&gt;::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Angle.html#associatedtype.Unitless\" title=\"type three_d_asset::prelude::Angle::Unitless\">Unitless</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"three_d_asset/prelude/trait.Angle.html\" title=\"trait three_d_asset::prelude::Angle\">Angle</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Rad.html\" title=\"struct three_d_asset::prelude::Rad\">Rad</a>&lt;&lt;A as <a class=\"trait\" href=\"three_d_asset/prelude/trait.Angle.html\" title=\"trait three_d_asset::prelude::Angle\">Angle</a>&gt;::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Angle.html#associatedtype.Unitless\" title=\"type three_d_asset::prelude::Angle::Unitless\">Unitless</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#255\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"cgmath/euler/struct.Euler.html\" title=\"struct cgmath::euler::Euler\">Euler</a>&lt;A&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;&lt;A as <a class=\"trait\" href=\"three_d_asset/prelude/trait.Angle.html\" title=\"trait three_d_asset::prelude::Angle\">Angle</a>&gt;::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Angle.html#associatedtype.Unitless\" title=\"type three_d_asset::prelude::Angle::Unitless\">Unitless</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Euler<A>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMatrix3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/matrix.rs.html#1614\">source</a><a href=\"#impl-From%3CMatrix3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Matrix3.html\" title=\"struct three_d_asset::prelude::Matrix3\">Matrix3</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/matrix.rs.html#1616\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(mat: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Matrix3.html\" title=\"struct three_d_asset::prelude::Matrix3\">Matrix3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the matrix to a quaternion</p>\n</div></details></div></details>","From<Matrix3<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRange%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#657\">source</a><a href=\"#impl-Index%3CRange%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#657\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<Range<usize>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#659\">source</a><a href=\"#impl-Index%3CRangeFrom%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#659\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFrom<usize>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeFull%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#660\">source</a><a href=\"#impl-Index%3CRangeFull%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#660\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeFull>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CRangeTo%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#658\">source</a><a href=\"#impl-Index%3CRangeTo%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#658\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<RangeTo<usize>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#656\">source</a><a href=\"#impl-Index%3Cusize%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = S</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#656\">source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>&lt;'a&gt;(&amp;'a self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;'a S</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<usize>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRange%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#657\">source</a><a href=\"#impl-IndexMut%3CRange%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#657\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<Range<usize>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#659\">source</a><a href=\"#impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#659\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<RangeFrom<usize>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRangeFull%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#660\">source</a><a href=\"#impl-IndexMut%3CRangeFull%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#660\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeFull.html\" title=\"struct core::ops::range::RangeFull\">RangeFull</a>) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<RangeFull>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#658\">source</a><a href=\"#impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#658\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &amp;'a mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[S]</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<RangeTo<usize>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3Cusize%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#656\">source</a><a href=\"#impl-IndexMut%3Cusize%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#656\">source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>&lt;'a&gt;(&amp;'a mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;'a mut S</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<usize>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InnerSpace-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#244\">source</a><a href=\"#impl-InnerSpace-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"three_d_asset/prelude/trait.InnerSpace.html\" title=\"trait three_d_asset::prelude::InnerSpace\">InnerSpace</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.dot\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#246-248\">source</a><a href=\"#method.dot\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.InnerSpace.html#tymethod.dot\" class=\"fn\">dot</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; S</h4></section></summary><div class='docblock'>Vector dot (or inner) product.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.magnitude2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/structure.rs.html#246\">source</a><a href=\"#method.magnitude2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.InnerSpace.html#method.magnitude2\" class=\"fn\">magnitude2</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.VectorSpace.html#associatedtype.Scalar\" title=\"type three_d_asset::prelude::VectorSpace::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>Returns the squared magnitude. <a href=\"three_d_asset/prelude/trait.InnerSpace.html#method.magnitude2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.angle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/structure.rs.html#251-253\">source</a><a href=\"#method.angle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.InnerSpace.html#method.angle\" class=\"fn\">angle</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Rad.html\" title=\"struct three_d_asset::prelude::Rad\">Rad</a>&lt;Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.VectorSpace.html#associatedtype.Scalar\" title=\"type three_d_asset::prelude::VectorSpace::Scalar\">Scalar</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.VectorSpace.html#associatedtype.Scalar\" title=\"type three_d_asset::prelude::VectorSpace::Scalar\">Scalar</a>: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h4></section></summary><div class='docblock'>Returns the angle between two vectors in radians.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.project_on\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/structure.rs.html#262\">source</a><a href=\"#method.project_on\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.InnerSpace.html#method.project_on\" class=\"fn\">project_on</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Returns the\n<a href=\"https://en.wikipedia.org/wiki/Vector_projection\">vector projection</a>\nof the current inner space projected onto the supplied argument.</div></details></div></details>","InnerSpace","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#541\">source</a><a href=\"#impl-Into%3C%5BS;+4%5D%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#543\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[S; 4]</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<[S; 4]>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#585\">source</a><a href=\"#impl-Into%3C(S,+S,+S,+S)%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a>&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#587\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(S, S, S, S)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(S, S, S, S)>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MetricSpace-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#220\">source</a><a href=\"#impl-MetricSpace-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"three_d_asset/prelude/trait.MetricSpace.html\" title=\"trait three_d_asset::prelude::MetricSpace\">MetricSpace</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Metric\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Metric\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"three_d_asset/prelude/trait.MetricSpace.html#associatedtype.Metric\" class=\"associatedtype\">Metric</a> = S</h4></section></summary><div class='docblock'>The metric to be returned by the <code>distance</code> function.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#224\">source</a><a href=\"#method.distance2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.MetricSpace.html#tymethod.distance2\" class=\"fn\">distance2</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; S</h4></section></summary><div class='docblock'>Returns the squared distance. <a href=\"three_d_asset/prelude/trait.MetricSpace.html#tymethod.distance2\">Read more</a></div></details></div></details>","MetricSpace","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#340-349\">source</a><a href=\"#impl-Mul%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#340-349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'a Quaternion<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Vector3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#311-318\">source</a><a href=\"#impl-Mul%3C%26Vector3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#311-318\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: &amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'a Vector3<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CS%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#281-285\">source</a><a href=\"#impl-Mul%3CS%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;S&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#281-285\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: S) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<S>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CVector3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#311-318\">source</a><a href=\"#impl-Mul%3CVector3%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#311-318\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Vector3<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#340-349\">source</a><a href=\"#impl-Mul-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#340-349\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CS%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#287-289\">source</a><a href=\"#impl-MulAssign%3CS%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;S&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#287-289\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scalar: S)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<S>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#275-279\">source</a><a href=\"#impl-Neg-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#275-279\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#181\">source</a><a href=\"#impl-One-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"three_d_asset/prelude/trait.One.html\" title=\"trait three_d_asset::prelude::One\">One</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#183\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"three_d_asset/prelude/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#128-130\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"three_d_asset/prelude/trait.One.html#method.is_one\">Read more</a></div></details></div></details>","One","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#impl-PartialEq-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#209\">source</a><a href=\"#impl-Product%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: 'a + <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#211\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a Quaternion<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#202\">source</a><a href=\"#impl-Product-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#204\">source</a><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#229\">source</a><a href=\"#impl-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#231\">source</a><h4 class=\"code-header\">pub fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.cast\" class=\"fn\">cast</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h4></section></summary><div class=\"docblock\"><p>Component-wise casting to another type.</p>\n</div></details></div></details>",0,"three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#55\">source</a><a href=\"#impl-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#59\">source</a><h4 class=\"code-header\">pub const fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.new\" class=\"fn\">new</a>(w: S, xi: S, yj: S, zk: S) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new quaternion from one scalar component and three\nimaginary components.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_sv\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#65\">source</a><h4 class=\"code-header\">pub const fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.from_sv\" class=\"fn\">from_sv</a>(s: S, v: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new quaternion from a scalar and a vector.</p>\n</div></details></div></details>",0,"three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#70\">source</a><a href=\"#impl-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_arc\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#79-83\">source</a><h4 class=\"code-header\">pub fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.from_arc\" class=\"fn\">from_arc</a>(\n    src: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;,\n    dst: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;,\n    fallback: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new quaternion as a closest arc between two vectors</p>\n<p>Return the closest rotation that turns <code>src</code> vector into <code>dst</code>.</p>\n<ul>\n<li>[Related StackOverflow question]\n(http://stackoverflow.com/questions/1171849/finding-quaternion-representing-the-rotation-from-one-vector-to-another)</li>\n<li>[Ogre implementation for normalized vectors]\n(https://bitbucket.org/sinbad/ogre/src/9db75e3ba05c/OgreMain/include/OgreVector3.h?fileviewer=file-view-default#cl-651)</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conjugate\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#104\">source</a><h4 class=\"code-header\">pub fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.conjugate\" class=\"fn\">conjugate</a>(self) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>The conjugate of the quaternion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nlerp\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#112\">source</a><h4 class=\"code-header\">pub fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.nlerp\" class=\"fn\">nlerp</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;, amount: S) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Do a normalized linear interpolation with <code>other</code>, by <code>amount</code>.</p>\n<p>This takes the shortest path, so if the quaternions have a negative\ndot product, the interpolation will be between <code>self</code> and <code>-other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slerp\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#139\">source</a><h4 class=\"code-header\">pub fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.slerp\" class=\"fn\">slerp</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;, amount: S) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Spherical Linear Interpolation</p>\n<p>Return the spherical linear interpolation between the quaternion and\n<code>other</code>. Both quaternions should be normalized first.</p>\n<p>This takes the shortest path, so if the quaternions have a negative\ndot product, the interpolation will be between <code>self</code> and <code>-other</code>.</p>\n<h5 id=\"performance-notes\"><a class=\"doc-anchor\" href=\"#performance-notes\">§</a>Performance notes</h5>\n<p>The <code>acos</code> operation used in <code>slerp</code> is an expensive operation, so\nunless your quaternions are far away from each other it’s generally\nmore advisable to use <code>nlerp</code> when you know your rotations are going\nto be small.</p>\n<ul>\n<li>[Understanding Slerp, Then Not Using It]\n(http://number-none.com/product/Understanding%20Slerp,%20Then%20Not%20Using%20It/)</li>\n<li>[Arcsynthesis OpenGL tutorial]\n(http://www.arcsynthesis.org/gltut/Positioning/Tut08%20Interpolation.html)</li>\n</ul>\n</div></details><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#164\">source</a><h4 class=\"code-header\">pub fn <a href=\"three_d_asset/prelude/struct.Quaternion.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#391\">source</a><a href=\"#impl-RelativeEq-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#393\">source</a><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\" class=\"fn\">default_max_relative</a>() -&gt; &lt;S as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#398\">source</a><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;,\n    epsilon: &lt;S as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: &lt;S as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/relative_eq.rs.html#29-34\">source</a><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#method.relative_ne\" class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" title=\"method approx::relative_eq::RelativeEq::relative_eq\"><code>RelativeEq::relative_eq</code></a>.</div></details></div></details>","RelativeEq","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rem%3CS%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#301-305\">source</a><a href=\"#impl-Rem%3CS%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Rem.html\" title=\"trait core::ops::arith::Rem\">Rem</a>&lt;S&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Rem.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>%</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#301-305\">source</a><a href=\"#method.rem\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Rem.html#tymethod.rem\" class=\"fn\">rem</a>(self, other: S) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>%</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Rem.html#tymethod.rem\">Read more</a></div></details></div></details>","Rem<S>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RemAssign%3CS%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#307-309\">source</a><a href=\"#impl-RemAssign%3CS%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>&lt;S&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.RemAssign.html\" title=\"trait core::ops::arith::RemAssign\">RemAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#307-309\">source</a><a href=\"#method.rem_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\" class=\"fn\">rem_assign</a>(&amp;mut self, scalar: S)</h4></section></summary><div class='docblock'>Performs the <code>%=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.RemAssign.html#tymethod.rem_assign\">Read more</a></div></details></div></details>","RemAssign<S>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#483\">source</a><a href=\"#impl-Rotation-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"three_d_asset/prelude/trait.Rotation.html\" title=\"trait three_d_asset::prelude::Rotation\">Rotation</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#521\">source</a><a href=\"#method.rotate_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation.html#tymethod.rotate_vector\" class=\"fn\">rotate_vector</a>(&amp;self, vec: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Evaluate the conjugation of <code>vec</code> by <code>self</code>.</p>\n<p>Note that <code>self</code> should be a unit quaternion (i.e. normalized) to represent a 3D rotation.</p>\n</div></details><section id=\"associatedtype.Space\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Space\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"three_d_asset/prelude/trait.Rotation.html#associatedtype.Space\" class=\"associatedtype\">Space</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Point3.html\" title=\"struct three_d_asset::prelude::Point3\">Point3</a>&lt;S&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.look_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#487\">source</a><a href=\"#method.look_at\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation.html#tymethod.look_at\" class=\"fn\">look_at</a>(dir: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;, up: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Create a rotation to a given direction with an ‘up’ vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.between_vectors\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#492\">source</a><a href=\"#method.between_vectors\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation.html#tymethod.between_vectors\" class=\"fn\">between_vectors</a>(a: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;, b: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Create a shortest rotation to transform vector ‘a’ into ‘b’.\nBoth given vectors are assumed to have unit length.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.invert\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#526\">source</a><a href=\"#method.invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation.html#tymethod.invert\" class=\"fn\">invert</a>(&amp;self) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Create a new rotation which “un-does” this rotation. That is,\n<code>r * r.invert()</code> is the identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/rotation.rs.html#66\">source</a><a href=\"#method.rotate_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation.html#method.rotate_point\" class=\"fn\">rotate_point</a>(&amp;self, point: Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Rotation.html#associatedtype.Space\" title=\"type three_d_asset::prelude::Rotation::Space\">Space</a>) -&gt; Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Rotation.html#associatedtype.Space\" title=\"type three_d_asset::prelude::Rotation::Space\">Space</a></h4></section></summary><div class='docblock'>Rotate a point using this rotation, by converting it to its\nrepresentation as a vector.</div></details></div></details>","Rotation","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation3-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#531\">source</a><a href=\"#impl-Rotation3-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"three_d_asset/prelude/trait.Rotation3.html\" title=\"trait three_d_asset::prelude::Rotation3\">Rotation3</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"three_d_asset/prelude/trait.Rotation3.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = S</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_axis_angle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#535\">source</a><a href=\"#method.from_axis_angle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation3.html#tymethod.from_axis_angle\" class=\"fn\">from_axis_angle</a>&lt;A&gt;(axis: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Vector3.html\" title=\"struct three_d_asset::prelude::Vector3\">Vector3</a>&lt;S&gt;, angle: A) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Rad.html\" title=\"struct three_d_asset::prelude::Rad\">Rad</a>&lt;S&gt;&gt;,</div></h4></section></summary><div class='docblock'>Create a rotation using an angle around a given axis. <a href=\"three_d_asset/prelude/trait.Rotation3.html#tymethod.from_axis_angle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_angle_x\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/rotation.rs.html#105\">source</a><a href=\"#method.from_angle_x\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation3.html#method.from_angle_x\" class=\"fn\">from_angle_x</a>&lt;A&gt;(theta: A) -&gt; Self<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Rad.html\" title=\"struct three_d_asset::prelude::Rad\">Rad</a>&lt;Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Rotation3.html#associatedtype.Scalar\" title=\"type three_d_asset::prelude::Rotation3::Scalar\">Scalar</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Create a rotation from an angle around the <code>x</code> axis (pitch).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_angle_y\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/rotation.rs.html#111\">source</a><a href=\"#method.from_angle_y\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation3.html#method.from_angle_y\" class=\"fn\">from_angle_y</a>&lt;A&gt;(theta: A) -&gt; Self<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Rad.html\" title=\"struct three_d_asset::prelude::Rad\">Rad</a>&lt;Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Rotation3.html#associatedtype.Scalar\" title=\"type three_d_asset::prelude::Rotation3::Scalar\">Scalar</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Create a rotation from an angle around the <code>y</code> axis (yaw).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_angle_z\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/rotation.rs.html#117\">source</a><a href=\"#method.from_angle_z\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Rotation3.html#method.from_angle_z\" class=\"fn\">from_angle_z</a>&lt;A&gt;(theta: A) -&gt; Self<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Rad.html\" title=\"struct three_d_asset::prelude::Rad\">Rad</a>&lt;Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.Rotation3.html#associatedtype.Scalar\" title=\"type three_d_asset::prelude::Rotation3::Scalar\">Scalar</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Create a rotation from an angle around the <code>z</code> axis (roll).</div></details></div></details>","Rotation3","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#330-334\">source</a><a href=\"#impl-Sub%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#330-334\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: &amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&'a Quaternion<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#330-334\">source</a><a href=\"#impl-Sub-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#330-334\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#336-338\">source</a><a href=\"#impl-SubAssign-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#336-338\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#195\">source</a><a href=\"#impl-Sum%3C%26Quaternion%3CS%3E%3E-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: 'a + <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#197\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum<&'a Quaternion<S>>","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#188\">source</a><a href=\"#impl-Sum-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#190\">source</a><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;&gt;,</div></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#404\">source</a><a href=\"#impl-UlpsEq-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#406\">source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\" class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#411\">source</a><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" class=\"fn\">ulps_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;,\n    epsilon: &lt;S as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/ulps_eq.rs.html#24\">source</a><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#method.ulps_ne\" class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" title=\"method approx::ulps_eq::UlpsEq::ulps_eq\"><code>UlpsEq::ulps_eq</code></a>.</div></details></div></details>","UlpsEq","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VectorSpace-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#216\">source</a><a href=\"#impl-VectorSpace-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"three_d_asset/prelude/trait.VectorSpace.html\" title=\"trait three_d_asset::prelude::VectorSpace\">VectorSpace</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"three_d_asset/prelude/trait.VectorSpace.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = S</h4></section></summary><div class='docblock'>The associated scalar.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/structure.rs.html#188\">source</a><a href=\"#method.lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.VectorSpace.html#method.lerp\" class=\"fn\">lerp</a>(self, other: Self, amount: Self::<a class=\"associatedtype\" href=\"three_d_asset/prelude/trait.VectorSpace.html#associatedtype.Scalar\" title=\"type three_d_asset::prelude::VectorSpace::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Returns the result of linearly interpolating the vector\ntowards <code>other</code> by the specified amount.</div></details></div></details>","VectorSpace","three_d_asset::prelude::math::Quat"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#169\">source</a><a href=\"#impl-Zero-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"three_d_asset/prelude/trait.Zero.html\" title=\"trait three_d_asset::prelude::Zero\">Zero</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"cgmath/num/trait.BaseFloat.html\" title=\"trait cgmath::num::BaseFloat\">BaseFloat</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#171\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"three_d_asset/prelude/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#176\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"three_d_asset/prelude/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","three_d_asset::prelude::math::Quat"],["<section id=\"impl-Copy-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#impl-Copy-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","three_d_asset::prelude::math::Quat"],["<section id=\"impl-StructuralPartialEq-for-Quaternion%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cgmath/quaternion.rs.html#46\">source</a><a href=\"#impl-StructuralPartialEq-for-Quaternion%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"three_d_asset/prelude/struct.Quaternion.html\" title=\"struct three_d_asset::prelude::Quaternion\">Quaternion</a>&lt;S&gt;</h3></section>","StructuralPartialEq","three_d_asset::prelude::math::Quat"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()